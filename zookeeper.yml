- hosts: amazon_*
  become: yes
  tasks:
   - name: Run the equivalent of "apt-get update" as a separate step
     apt:
       update_cache: yes

   - name: Get apache zookeeper
     get_url: 
       url: https://dlcdn.apache.org/zookeeper/zookeeper-3.8.0/apache-zookeeper-3.8.0-bin.tar.gz
       dest: /home/ubuntu
   - name: Extract  zookeeper
     ansible.builtin.unarchive:
       src: /home/ubuntu/apache-zookeeper-3.8.0-bin.tar.gz
       dest: /home/ubuntu
       remote_src: True
       owner: ubuntu       
#   - name: changing name
#     raw: mv apache-zookeeper-3.8.0-bin zookeeper
#   - name: Transferring files to usr/local directory
#     raw: sudo rm -f -r /usr/local/zookeeper     
#   - name: Transferring files to usr/local directory
#     raw: mv zookeeper /usr/local/zookeeper
#   - name: creating data directory
#     raw: mkdir /usr/local/zookeeper/data  
#   - name: creating myid file
#     raw: sudo touch /usr/local/zookeeper/data/myid
   - name: creating zoo.cfg file
     raw: sudo touch /usr/local/zookeeper/conf/zoo.cfg 
   - name: Editing zoo.cfg File
     ansible.builtin.blockinfile:
       dest: /usr/local/zookeeper/conf/zoo.cfg
       block: |
         tickTime = 2000
         syncLimit = 5
         dataDir = /usr/local/zookeeper/data
         clientPort= 2181
         server.1 = ec2-54-221-172-176.compute-1.amazonaws.com : 2888 : 3888
         server.2 = ec2-18-207-151-68.compute-1.amazonaws.com : 2888 : 3888
         server.3 = ec2-54-242-196-207.compute-1.amazonaws.com : 2888 : 3888
       backup: yes
       owner: ubuntu 
   - name: Make dir hadoop
     raw: sudo chown ubuntu:ubuntu -R hadoop/hdfs/data
   - name: USER rights owning bin
     raw: sudo chown $USER:$USER /usr/local/zookeeper/bin 
   - name: Editing Bash File
     
     ansible.builtin.blockinfile:
       dest: .bashrc
       insertafter: EOF
       block: |
         export HADOOP_HOME=/usr/local/hadoop
         export PATH=$PATH:$HADOOP_HOME/bin
         export PATH=$PATH:$HADOOP_HOME/sbin
         export HADOOP_MAPRED_HOME=${HADOOP_HOME}
         export HADOOP_COMMON_HOME=${HADOOP_HOME}
         export HADOOP_HDFS_HOME=${HADOOP_HOME}
         export YARN_HOME=${HADOOP_HOME}
         export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
         export SPARK_HOME=/usr/local/spark
         export PYSPARK_PYTHON=python3
         export PATH=$PATH:$SPARK_HOME/bin
         export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native:$LD_LIBRARY_PATH
         export PYTHONPATH=$SPARK_HOME/python:$SPARK_HOME/python/build:$PYTHONPATH
         export ZOO_HOME=/usr/local/zookeeper-3.4.6
         export PATH=$ZOO_HOME/bin:$PATH
          function sparknotebook()
          {
          export PYSPARK_PYTHON=python3
          export SPARK_HOME=/usr/local/spark
          export PYSPARK_DRIVER_PYTHON=jupyter
          export PYSPARK_DRIVER_PYTHON_OPTS="notebook"
          $SPARK_HOME/bin/pyspark --packages databricks:spark-deep-learning:1.5.0-spark2.4-s_2.11
          }         
       backup: yes     
- hosts: amazon_1
  become: yes
  tasks:
   - name: Editing MYID File
     ansible.builtin.blockinfile:
       dest: /usr/local/zookeeper/conf/zoo.cfg
       block: |
         1
       backup: yes
       owner: ubuntu     
- hosts: amazon_2
  become: yes
  tasks:
   - name: Editing MYID file
     ansible.builtin.blockinfile:
       dest: /usr/local/zookeeper/conf/zoo.cfg
       block: |
         2
       backup: yes
       owner: ubuntu
- hosts: amazon_3
  become: yes
  tasks:
   - name: Editing MYID file
     ansible.builtin.blockinfile:
       dest: /usr/local/zookeeper/conf/zoo.cfg
       block: |
         3
       backup: yes
       owner: ubuntu      

